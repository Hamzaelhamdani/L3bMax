<template>
  <div class="container">
    <div class="header">
      <text class="back-btn" onclick="goBack">‚Üê Retour</text>
      <text class="title">üîÆ Magic 8 Ball</text>
    </div>
    
    <div class="game-area">
      <text class="instructions" if="{{!currentAnswer}}">Posez une question et secouez la boule magique!</text>
      
      <div class="ball-container">
        <div class="magic-ball {{isShaking ? 'shaking' : ''}}" onclick="shakeBall">
          <div class="ball-surface">
            <div class="window">
              <text class="answer-text" if="{{currentAnswer}}">{{currentAnswer}}</text>
              <text class="placeholder-text" if="{{!currentAnswer}}">?</text>
            </div>
          </div>
          <div class="ball-shadow"></div>
        </div>
      </div>
      
      <text class="shake-instruction" if="{{!isShaking && !currentAnswer}}">üëÜ Touchez la boule pour la secouer</text>
      <text class="shaking-text" if="{{isShaking}}">üîÆ Consultation en cours...</text>
      
      <div class="question-input" if="{{!isShaking}}">
        <input class="question-field" placeholder="Tapez votre question ici..." value="{{userQuestion}}" onchange="updateQuestion"/>
      </div>
      
      <div class="action-buttons" if="{{currentAnswer}}">
        <text class="ask-again-btn" onclick="askAgain">Poser une autre question</text>
      </div>
      
      <div class="history" if="{{questionHistory.length > 0}}">
        <text class="history-title">Historique des questions:</text>
        <div class="history-list">
          <div class="history-item" for="{{item in questionHistory}}">
            <text class="history-question">Q: {{item.question}}</text>
            <text class="history-answer">R: {{item.answer}}</text>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<style>
  .container {
    flex-direction: column;
    background-color: #000000;
    height: 100%;
    padding: 20px;
  }
  
  .header {
    flex-direction: row;
    align-items: center;
    margin-bottom: 20px;
  }
  
  .back-btn {
    color: #FF7900;
    font-size: 18px;
    font-weight: bold;
    padding: 10px;
  }
  
  .title {
    color: #FFFFFF;
    font-size: 24px;
    font-weight: bold;
    margin-left: 20px;
  }
  
  .game-area {
    flex-direction: column;
    align-items: center;
    flex: 1;
  }
  
  .instructions {
    color: #FFFFFF;
    font-size: 16px;
    text-align: center;
    margin-bottom: 20px;
    padding: 0 20px;
  }
  
  .ball-container {
    margin: 30px 0;
    position: relative;
  }
  
  .magic-ball {
    width: 200px;
    height: 200px;
    border-radius: 100px;
    background: linear-gradient(45deg, #1a1a1a, #000000);
    border: 3px solid #333333;
    position: relative;
    align-items: center;
    justify-content: center;
  }
  
  .magic-ball.shaking {
    animation: shake 0.5s ease-in-out infinite;
  }
  
  .ball-surface {
    width: 180px;
    height: 180px;
    border-radius: 90px;
    background: radial-gradient(circle at 30% 30%, #333333, #000000);
    align-items: center;
    justify-content: center;
    position: relative;
  }
  
  .window {
    width: 100px;
    height: 60px;
    background-color: #000066;
    border-radius: 30px;
    border: 2px solid #0000AA;
    align-items: center;
    justify-content: center;
    position: relative;
  }
  
  .answer-text {
    color: #FFFFFF;
    font-size: 12px;
    font-weight: bold;
    text-align: center;
    padding: 5px;
    max-width: 90px;
  }
  
  .placeholder-text {
    color: #666666;
    font-size: 24px;
    font-weight: bold;
  }
  
  .ball-shadow {
    position: absolute;
    bottom: -10px;
    left: 10px;
    width: 180px;
    height: 30px;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 90px;
    filter: blur(8px);
  }
  
  .shake-instruction, .shaking-text {
    color: #FF7900;
    font-size: 16px;
    text-align: center;
    margin: 10px 0;
  }
  
  .question-input {
    margin: 20px 0;
    width: 280px;
  }
  
  .question-field {
    width: 100%;
    padding: 15px;
    background-color: #333333;
    color: #FFFFFF;
    border: 2px solid #FF7900;
    border-radius: 8px;
    font-size: 16px;
    text-align: center;
  }
  
  .action-buttons {
    margin: 20px 0;
  }
  
  .ask-again-btn {
    padding: 15px 25px;
    background-color: #FF7900;
    color: #FFFFFF;
    font-size: 16px;
    font-weight: bold;
    border-radius: 8px;
    text-align: center;
  }
  
  .history {
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
    max-width: 300px;
  }
  
  .history-title {
    color: #FFFFFF;
    font-size: 16px;
    font-weight: bold;
    margin-bottom: 10px;
  }
  
  .history-list {
    flex-direction: column;
    gap: 10px;
    max-height: 150px;
    overflow: hidden;
  }
  
  .history-item {
    flex-direction: column;
    gap: 3px;
    padding: 8px;
    background-color: #1a1a1a;
    border-radius: 6px;
  }
  
  .history-question {
    color: #CCCCCC;
    font-size: 12px;
  }
  
  .history-answer {
    color: #FF7900;
    font-size: 12px;
    font-weight: bold;
  }
  
  @keyframes shake {
    0%, 100% { transform: translateX(0) translateY(0) rotate(0deg); }
    10% { transform: translateX(-5px) translateY(-2px) rotate(-2deg); }
    20% { transform: translateX(5px) translateY(2px) rotate(2deg); }
    30% { transform: translateX(-3px) translateY(-1px) rotate(-1deg); }
    40% { transform: translateX(3px) translateY(1px) rotate(1deg); }
    50% { transform: translateX(-2px) translateY(-1px) rotate(-0.5deg); }
    60% { transform: translateX(2px) translateY(1px) rotate(0.5deg); }
    70% { transform: translateX(-1px) translateY(0px) rotate(-0.2deg); }
    80% { transform: translateX(1px) translateY(0px) rotate(0.2deg); }
    90% { transform: translateX(0px) translateY(0px) rotate(0deg); }
  }
</style>

<script>
  export default {
    data: {
      currentAnswer: '',
      userQuestion: '',
      isShaking: false,
      questionHistory: [],
      answers: [
        "Oui, d√©finitivement",
        "C'est certain",
        "Sans aucun doute",
        "Oui, absolument",
        "Vous pouvez compter dessus",
        "Comme je le vois, oui",
        "Tr√®s probablement",
        "Les perspectives sont bonnes",
        "Oui",
        "Les signes pointent vers oui",
        "R√©pondez floue, r√©essayez",
        "Redemandez plus tard",
        "Mieux vaut ne pas vous le dire maintenant",
        "Impossible de pr√©dire maintenant",
        "Concentrez-vous et redemandez",
        "N'y comptez pas",
        "Ma r√©ponse est non",
        "Mes sources disent non",
        "Les perspectives ne sont pas bonnes",
        "Tr√®s douteux"
      ]
    },
    
    updateQuestion(e) {
      this.userQuestion = e.value;
    },
    
    shakeBall() {
      if (this.isShaking) return;
      
      if (!this.userQuestion.trim()) {
        // Vibrer pour indiquer qu'une question est n√©cessaire
        return;
      }
      
      this.isShaking = true;
      this.currentAnswer = '';
      
      setTimeout(() => {
        // Choisir une r√©ponse al√©atoire
        const randomIndex = Math.floor(Math.random() * this.answers.length);
        this.currentAnswer = this.answers[randomIndex];
        
        // Ajouter √† l'historique
        this.questionHistory.unshift({
          question: this.userQuestion.trim(),
          answer: this.currentAnswer
        });
        
        // Limiter l'historique
        if (this.questionHistory.length > 3) {
          this.questionHistory = this.questionHistory.slice(0, 3);
        }
        
        this.isShaking = false;
      }, 1500);
    },
    
    askAgain() {
      this.currentAnswer = '';
      this.userQuestion = '';
    },
    
    goBack() {
      this.$app.router.back();
    }
  }
</script>
